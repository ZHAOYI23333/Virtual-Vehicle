<server description="new server">
	<dataSource id="DefaultDataSource" jndiName="jdbc/h2" type="javax.sql.DataSource">
		<jdbcDriver javax.sql.DataSource="org.h2.jdbcx.JdbcDataSource" libraryRef="H2Library"/>
		<properties URL="jdbc:h2:/Users/zhaoyi23333/myusedcar;AUTO_SERVER=TRUE" password="" user=""/>
	</dataSource>
	<library id="H2Library">
		<fileset dir="/Users/zhaoyi23333/Documents/workspace/h2/bin"/>
	</library>
    <!-- Enable features -->
    <featureManager>
        <feature>javaee-8.0</feature>
        <feature>localConnector-1.0</feature>
    	<feature>distributedMap-1.0</feature>
		<feature>jndi-1.0</feature>
		<feature>ejbLite-3.2</feature>
		<feature>jpa-2.2</feature>
		<feature>jdbc-4.2</feature>
		<feature>wasJmsServer-1.0</feature>
		<feature>wasJmsClient-2.0</feature>
		<feature>cdi-1.2</feature>>
	</featureManager>
    
    <keyStore id="defaultKeyStore" password="{xor}Ozo5PiozKxQ6JgwrMC06"/>

    <!-- This template enables security. To get the full use of all the capabilities, a keystore and user registry are required. -->
    
    <!-- For the keystore, default keys are generated and stored in a keystore. To provide the keystore password, generate an 
         encoded password using bin/securityUtility encode and add it below in the password attribute of the keyStore element. 
         Then uncomment the keyStore element. -->
    <!--
    <keyStore password=""/> 
    -->
    
    <!--For a user registry configuration, configure your user registry. For example, configure a basic user registry using the
        basicRegistry element. Specify your own user name below in the name attribute of the user element. For the password, 
        generate an encoded password using bin/securityUtility encode and add it in the password attribute of the user element. 
        Then uncomment the user element. -->
    <basicRegistry id="basic" realm="BasicRealm"> 
        <!-- <user name="yourUserName" password="" />  --> 
    </basicRegistry>
    
    <!-- To access this server from a remote client add a host attribute to the following element, e.g. host="*" -->
    <httpEndpoint httpPort="9080" httpsPort="9443" id="defaultHttpEndpoint"/>
                  
    <!-- Automatically expand WAR files and EAR files -->
    <applicationManager autoExpand="true"/>


    <applicationMonitor updateTrigger="mbean"/>

    <enterpriseApplication id=" MyUsedCar- InventoryManagement-EJBEAR" location="MyUsedCar- InventoryManagement-EJBEAR.ear" name=" MyUsedCar- InventoryManagement-EJBEAR"/>

    <enterpriseApplication id=" MyUsedCar- InventoryManagement-EJBEAR" location="MyUsedCar- InventoryManagement-EJBEAR.ear" name=" MyUsedCar- InventoryManagement-EJBEAR"/>

    <enterpriseApplication id=" MyUsedCar- InventoryManagement-EJBEAR" location="MyUsedCar- InventoryManagement-EJBEAR.ear" name=" MyUsedCar- InventoryManagement-EJBEAR"/>

    <enterpriseApplication id=" MyUsedCar- InventoryManagement-EJBEAR" location="MyUsedCar- InventoryManagement-EJBEAR.ear" name=" MyUsedCar- InventoryManagement-EJBEAR"/>

    <enterpriseApplication id=" MyUsedCar- InventoryManagement-EJBEAR" location="MyUsedCar- InventoryManagement-EJBEAR.ear" name=" MyUsedCar- InventoryManagement-EJBEAR"/>

    <enterpriseApplication id=" MyUsedCar- InventoryManagement-EJBEAR" location="MyUsedCar- InventoryManagement-EJBEAR.ear" name=" MyUsedCar- InventoryManagement-EJBEAR"/>

    <enterpriseApplication id=" MyUsedCar- InventoryManagement-EJBEAR" location="MyUsedCar- InventoryManagement-EJBEAR.ear" name=" MyUsedCar- InventoryManagement-EJBEAR"/>

    <enterpriseApplication id=" MyUsedCar- InventoryManagement-EJBEAR" location="MyUsedCar- InventoryManagement-EJBEAR.ear" name=" MyUsedCar- InventoryManagement-EJBEAR"/>

    <webApplication contextRoot="MyUsedCar" id="MyUsedCAR" location="MyUsedCar.war" name="MyUsedCAR"/>

    <enterpriseApplication id="MyUsedCar-InventoryManagement-EJBEAR" location="MyUsedCar-InventoryManagement-EJBEAR.ear" name="MyUsedCar-InventoryManagement-EJBEAR"/>
    <cdi12></cdi12>
</server>